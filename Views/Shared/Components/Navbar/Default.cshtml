@model List<Category>

<nav class="navbar navbar-expand-lg navbar-dark fixed-top bg-dark">
    <a class="navbar-brand" href="/">OnlineStore</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            @{
                string currentController = ViewContext.RouteData.Values["controller"].ToString();
                string currentAction = ViewContext.RouteData.Values["action"].ToString();
            
                bool isHomeTheCurrentPage = currentController == "Home" && currentAction == "Index";
                string homeActiveStatus = isHomeTheCurrentPage ? "active" : "";

                bool isContactTheCurrentPage = currentController == "Home" && currentAction == "Contact";
                string contactActiveStatus = isContactTheCurrentPage ? "active" : "";
            }

            <li class="nav-item @(homeActiveStatus)">
                <a class="nav-link" href="/">
                    <i class="fas fa-home"></i> Home
                </a>
            </li>

            @if (Model != null && Model.Count > 0)
            {
                <div class="dropdown">
                     <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" 
                     role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-list-ul"></i> Categories
                    </a>

                    <ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
                        @{
                            var allCategories = Model;
                            var mainCategories = allCategories.Where(c => c.ParentCategoryId == null);

                            foreach (var category in mainCategories)
                            {
                                ViewData.Remove("ParentCategory");
                                var viewData = new ViewDataDictionary(ViewData){{"ParentCategory", category}};
                                
                                @await Html.PartialAsync("_DropdownSubmenu.cshtml", Model, viewData);
                            }
                        }
                    </ul>
                </div>
            }
            
            <li class="nav-item @(contactActiveStatus)">
                <a class="nav-link" href="/Home/Contact"><i class="far fa-address-book"></i> Contact </a>
            </li>
        </ul>

        <form class="form-inline my-2 my-lg-0">
            <input class="form-control mr-sm-2" type="search" placeholder="Type..." aria-label="Search">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
            <a class="nav-link" href="/Home/Login">
                <i class="fas fa-user-alt"></i>
                Login
            </a>
            <a class="nav-link" href="/Home/Cart">
                <i class="fas fa-shopping-cart"></i>
                Cart
            </a>
        </form>
    </div>
</nav>